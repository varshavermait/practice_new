<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="designpatterns.compound.GooseDuck"/>
    <fullyQualifiedTypeName name="designpatterns.compound.GooseAdapter"/>
    <fullyQualifiedTypeName name="designpatterns.compound.Goose"/>
    <fullyQualifiedTypeName name="designpatterns.compound.Quackable"/>
    <fullyQualifiedTypeName name="recurssion.PowerOfN"/>
    <fullyQualifiedTypeName name="java.security.SecureRandom"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="java.lang.IllegalAccessException"/>
    <fullyQualifiedTypeName name="java.lang.SuppressWarnings"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerRecord"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.SendResult"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Flow.Publisher"/>
    <fullyQualifiedTypeName name="com.test.kafka.KafkaTestApplication"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.test.kafka.service.KafkaMessagePublisher"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="java.util.concurrent.ExecutorService"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Executors"/>
    <fullyQualifiedTypeName name="com.threadpractice.RunAsyncDemo"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Future"/>
    <fullyQualifiedTypeName name="java.util.concurrent.TimeUnit"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.threadpractice.Employee"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="com.threadpractice.Database"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="com.basics.list.Node"/>
    <fullyQualifiedTypeName name="com.basics.list.DoublyLinkedList"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="sun.jvm.hotspot.debugger.windbg.DLL"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="java.lang.Iterable"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.TreeSet"/>
    <fullyQualifiedTypeName name="tunbasedgame.game.Board"/>
    <fullyQualifiedTypeName name="tunbasedgame.game.Player"/>
    <fullyQualifiedTypeName name="tunbasedgame.game.Move"/>
    <fullyQualifiedTypeName name="tunbasedgame.game.GameResult"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="com.threadpractice.Q"/>
    <fullyQualifiedTypeName name="com.threadpractice.Producer"/>
    <fullyQualifiedTypeName name="com.threadpractice.Consumer"/>
</qualifiedTypeNameHistroy>
